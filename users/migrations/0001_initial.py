# Generated by Django 5.0 on 2024-09-24 12:18

import authentication.utils
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('grades', '0001_initial'),
        ('schools', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('name', models.CharField(max_length=64, verbose_name='name')),
                ('surname', models.CharField(max_length=64, verbose_name='surname')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
                ('role', models.CharField(choices=[('FOUNDER', 'Founder'), ('PRINCIPAL', 'Principal'), ('ADMIN', 'Admin'), ('TEACHER', 'Teacher'), ('STUDENT', 'Student'), ('PARENT', 'Parent')], max_length=16)),
                ('activated', models.BooleanField(default=False, verbose_name='account active or not')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=authentication.utils.get_upload_path)),
                ('multifactor_authentication', models.BooleanField(default=False, verbose_name='multifactor authentication')),
                ('email_banned', models.BooleanField(default=False, verbose_name='email banned')),
                ('email_ban_amount', models.SmallIntegerField(default=0, verbose_name='amount of times email has been banned')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='superuser status')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('account_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['surname', 'name', 'account_id'],
            },
        ),
        migrations.CreateModel(
            name='Founder',
            fields=[
                ('baseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            bases=('users.baseuser',),
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('baseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admins', to='schools.school')),
            ],
            bases=('users.baseuser',),
        ),
        migrations.CreateModel(
            name='Principal',
            fields=[
                ('baseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('contact_number', models.CharField(max_length=15, unique=True, verbose_name='phone number')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='principal', to='schools.school')),
            ],
            bases=('users.baseuser',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('baseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('id_number', models.CharField(blank=True, max_length=13, null=True, unique=True, verbose_name='ID number')),
                ('passport_number', models.CharField(blank=True, max_length=9, null=True, unique=True, verbose_name='passport number')),
                ('event_emails', models.BooleanField(default=False, verbose_name='email subscription')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='grades.grade')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='schools.school')),
            ],
            options={
                'ordering': ['surname', 'name', 'account_id'],
            },
            bases=('users.baseuser',),
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('baseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('event_emails', models.BooleanField(default=False, verbose_name='email subscription')),
                ('children', models.ManyToManyField(blank=True, related_name='parents', to='users.student')),
            ],
            bases=('users.baseuser',),
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('baseuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teachers', to='schools.school')),
            ],
            bases=('users.baseuser',),
        ),
        migrations.AddConstraint(
            model_name='baseuser',
            constraint=models.UniqueConstraint(fields=('email',), name='unique_account_email_address'),
        ),
    ]
