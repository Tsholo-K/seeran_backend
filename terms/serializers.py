# django
from django.utils.translation import gettext_lazy as _

# rest framework
from rest_framework import serializers
from rest_framework.validators import UniqueTogetherValidator

# models
from .models import Term
from grades.models import Grade
from schools.models import School


class TermCreationSerializer(serializers.ModelSerializer):
    
    # explicitly declaring the field since its set as editable=False in the model, 
    # specifying that a field should not be included in forms autogenerated from the model. This includes the admin site and serializers in Django Rest Framework
    grade = serializers.PrimaryKeyRelatedField(queryset=Grade.objects.all()) 
    school = serializers.PrimaryKeyRelatedField(queryset=School.objects.all())

    class Meta:
        model = Term
        fields = ['term_name', 'weight', 'start_date', 'end_date', 'school_days', 'grade', 'school']

    def __init__(self, *args, **kwargs):
        super(TermCreationSerializer, self).__init__(*args, **kwargs)
        # Remove the unique together validator that's added by DRF
        self.validators = [v for v in self.validators if not isinstance(v, UniqueTogetherValidator)]


class UpdateTermSerializer(serializers.ModelSerializer):

    class Meta:
        model = Term
        fields = ['term_name', 'weight', 'start_date', 'end_date', 'school_days']

    def __init__(self, *args, **kwargs):
        super(UpdateTermSerializer, self).__init__(*args, **kwargs)
        # Remove the unique together validator that's added by DRF
        self.validators = [v for v in self.validators if not isinstance(v, UniqueTogetherValidator)]
        # Set all fields to be optional by making them not required
        for field in self.fields:
            self.fields[field].required = False


class TermsSerializer(serializers.ModelSerializer):
            
    start_date = serializers.DateField(format='%d-%m-%Y')
    end_date = serializers.DateField(format='%d-%m-%Y')

    class Meta:
        model = Term
        fields = ['term_name', 'weight', 'start_date', 'end_date', 'term_id']


class FormTermsSerializer(serializers.ModelSerializer):

    class Meta:
        model = Term
        fields = ['term_name', 'start_date', 'end_date', 'term_id']


class TermSerializer(serializers.ModelSerializer):
            
    start_date = serializers.DateField(format='%d-%m-%Y')
    end_date = serializers.DateField(format='%d-%m-%Y')
    
    class Meta:
        model = Term
        fields = ['term_name', 'weight', 'start_date', 'end_date', 'school_days']


